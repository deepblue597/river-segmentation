name: river-segmentation-pipeline
services:
  init-permissions:
    image: alpine:latest
    container_name: init-permissions
    command: >
      sh -c "
        chown -R 1000:1000 /data/timescaledb &&
        chown -R 472:472 /data/grafana &&
        mkdir -p /data/kafka/controller1 /data/kafka/controller2 /data/kafka/controller3 &&
        mkdir -p /data/kafka/broker1 /data/kafka/broker2 /data/kafka/broker3 &&
        chmod -R 755 /data/kafka &&
        echo 'Permissions set successfully'
      "
    volumes:
      - ./data/timescaledb:/data/timescaledb
      - ./data/grafana:/data/grafana
      - ./data/kafka:/data/kafka
    restart: "no"

  timescaledb:
    container_name: timescaledb
    image: timescale/timescaledb-ha:pg17
    depends_on:
      - init-permissions
    user: "1000:1000"
    env_file:
      - environment_variables/timescaledb.env
    volumes:
      - ./data/timescaledb:/pgdata
    ports:
      - "5432:5432"
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana-enterprise
    depends_on:
      - init-permissions
    volumes:
      - ./data/grafana:/var/lib/grafana
    ports:
      - "3001:3000"
    restart: unless-stopped

  minio:
    container_name: minio
    image: quay.io/minio/minio
    env_file:
      - environment_variables/minio.env
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./data/minio:/data
    restart: unless-stopped

  controller-riverseg-1:
    image: apache/kafka:latest
    container_name: controller-riverseg-1
    depends_on:
      - init-permissions
    env_file:
      - environment_variables/kafka-controller1.env
    volumes:
      - ./data/kafka/controller1:/var/lib/kafka/data

  controller-riverseg-2:
    image: apache/kafka:latest
    container_name: controller-riverseg-2
    depends_on:
      - init-permissions
    env_file:
      - environment_variables/kafka-controller2.env
    volumes:
      - ./data/kafka/controller2:/var/lib/kafka/data

  controller-riverseg-3:
    image: apache/kafka:latest
    container_name: controller-riverseg-3
    depends_on:
      - init-permissions
    env_file:
      - environment_variables/kafka-controller3.env
    volumes:
      - ./data/kafka/controller3:/var/lib/kafka/data

  broker-riverseg-1:
    image: apache/kafka:latest
    container_name: broker-riverseg-1
    user: "0:0"
    ports:
      - 29092:9092
      - 29093:9093
    env_file:
      - environment_variables/kafka-broker1.env
    depends_on:
      - controller-riverseg-1
      - controller-riverseg-2
      - controller-riverseg-3
    volumes:
      - ./data/kafka/broker1:/var/lib/kafka/data
      - ./config/kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf:ro

  broker-riverseg-2:
    image: apache/kafka:latest
    container_name: broker-riverseg-2
    user: "0:0"
    ports:
      - 39092:9092
      - 39093:9093
    env_file:
      - environment_variables/kafka-broker2.env
    depends_on:
      - controller-riverseg-1
      - controller-riverseg-2
      - controller-riverseg-3
    volumes:
      - ./data/kafka/broker2:/var/lib/kafka/data
      - ./config/kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf:ro

  broker-riverseg-3:
    image: apache/kafka:latest
    container_name: broker-riverseg-3
    user: "0:0"
    ports:
      - 49092:9092
      - 49093:9093
    env_file:
      - environment_variables/kafka-broker3.env
    depends_on:
      - controller-riverseg-1
      - controller-riverseg-2
      - controller-riverseg-3
    volumes:
      - ./data/kafka/broker3:/var/lib/kafka/data
      - ./config/kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf:ro

  kafka-ui-multi:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-multi
    env_file:
      - environment_variables/kafka-ui.env
    ports:
      - "8080:8080"
    depends_on:
      - broker-riverseg-1
      - broker-riverseg-2
      - broker-riverseg-3

  river-segmentation:
    image: deepblue597/river-segmentation:latest
    container_name: river-segmentation
    env_file:
      - environment_variables/river-segmentation.env
    depends_on:
      - timescaledb
      - minio
      - broker-riverseg-1
      - broker-riverseg-2
      - broker-riverseg-3
      - kafka-ui-multi
    restart: unless-stopped

  river-backend:
    image: deepblue597/river-backend:latest
    container_name: river-backend
    env_file:
      - environment_variables/backend.env
    ports:
      - "8000:8000"
    depends_on:
      - minio
      - broker-riverseg-1
    restart: unless-stopped

  river-frontend:
    image: deepblue597/river-frontend:latest
    container_name: river-frontend
    env_file:
      - environment_variables/frontend.env
    ports:
      - "8501:8501"
    depends_on:
      - river-backend
    restart: unless-stopped
